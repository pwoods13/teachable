theta.curr <- theta[j-1]
theta.prop <- rnorm(1, theta.curr, 6)
alpha <- min(1, g(theta.prop)*dnorm(theta.curr,theta.prop, 6) /
(g(theta.curr)*dnorm(theta.prop,theta.curr, 6)))
theta[j] <- ifelse(runif(1) <= alpha, theta.prop, theta.curr)
}
mean(diff(theta) != 0)
plot(theta,type = "l")
acf(theta)
for(j in 2: length(theta)){
theta.curr <- theta[j-1]
theta.prop <- rnorm(1, theta.curr, 6)
alpha <- min(1, g(theta.prop)*dnorm(theta.curr,theta.prop, 6) /
(g(theta.curr)*dnorm(theta.prop,theta.curr, 6)))
theta[j] <- ifelse(runif(1) <= alpha, theta.prop, theta.curr)
}
mean(diff(theta) != 0)
plot(theta,type = "l")
acf(theta)
for(j in 2: length(theta)){
theta.curr <- theta[j-1]
theta.prop <- rnorm(1, theta.curr, 6)
alpha <- min(1, g(theta.prop)*dnorm(theta.curr,theta.prop, 6) /
(g(theta.curr)*dnorm(theta.prop,theta.curr, 6)))
theta[j] <- ifelse(runif(1) <= alpha, theta.prop, theta.curr)
}
mean(diff(theta) != 0)
plot(theta,type = "l")
acf(theta)
for(j in 2: length(theta)){
theta.curr <- theta[j-1]
theta.prop <- rnorm(1, theta.curr, 6)
alpha <- min(1, g(theta.prop)*dnorm(theta.curr,theta.prop, 6) /
(g(theta.curr)*dnorm(theta.prop,theta.curr, 6)))
theta[j] <- ifelse(runif(1) <= alpha, theta.prop, theta.curr)
}
mean(diff(theta) != 0)
plot(theta,type = "l")
acf(theta)
plot(theta,type = "l")
acf(theta)
theta.burn <- theta[-(1:20)]
acf(theta.burn)
mean(diff(theta.burn)!=0)
plot(theta,type = "l")
plot(density(theta.burn))
theta <- rep(NA, 1001)
theta[1] <- 1
for(j in 2: length(theta)){
theta.curr <- theta[j-1]
theta.prop <- rnorm(1, theta.curr, 6)
alpha <- min(1, g(theta.prop)*dnorm(theta.curr,theta.prop, 6) /
(g(theta.curr)*dnorm(theta.prop,theta.curr, 6)))
theta[j] <- ifelse(runif(1) <= alpha, theta.prop, theta.curr)
}
mean(diff(theta) != 0)
plot(theta,type = "l")
acf(theta)
theta.burn <- theta[-(1:20)]
acf(theta.burn)
mean(diff(theta.burn)!=0)
plot(density(theta.burn))
plot(density(theta.burn), main = "Prior Distribution",
xlab = expression(theta),
ylab = "Probability")
counts <- c(3, 6, 2, 4, 6, 1, 8, 4, 3, 3, 9)
theta[1] <- mean(counts)
for(j in 2: length(theta)){
theta.curr <- theta[j-1]
theta.prop <- rnorm(1, theta.curr, 6)
alpha <- min(1, g(theta.prop)*dnorm(theta.curr,theta.prop, 6) /
(g(theta.curr)*dnorm(theta.prop,theta.curr, 6)))
theta[j] <- ifelse(runif(1) <= alpha, theta.prop, theta.curr)
}
mean(diff(theta) != 0)
plot(theta,type = "l")
acf(theta)
counts <- c(3, 6, 2, 4, 6, 1, 8, 4, 3, 3, 9)
theta <- rep(NA, 100000)
theta[1] <- mean(counts)
for(j in 2: length(theta)){
theta.curr <- theta[j-1]
theta.prop <- rnorm(1, theta.curr, 6)
alpha <- min(1, g(theta.prop)*dnorm(theta.curr,theta.prop, 6) /
(g(theta.curr)*dnorm(theta.prop,theta.curr, 6)))
theta[j] <- ifelse(runif(1) <= alpha, theta.prop, theta.curr)
}
mean(diff(theta) != 0)
plot(theta,type = "l")
acf(theta)
theta.burn <- theta[-(1:1000)]
acf(theta.burn)
mean(diff(theta.burn)!=0)
theta.burn <- theta[-(1:10000)]
acf(theta.burn)
mean(diff(theta.burn)!=0)
counts <- c(3, 6, 2, 4, 6, 1, 8, 4, 3, 3, 9)
theta.b <- rep(NA, 100000)
theta.b[1] <- mean(counts)
for(j in 2: length(theta.b)){
theta.curr <- theta.b[j-1]
theta.prop <- rnorm(1, theta.curr, 6)
alpha <- min(1, g(theta.prop)*dnorm(theta.curr,theta.prop, 6) /
(g(theta.curr)*dnorm(theta.prop,theta.curr, 6)))
theta.b[j] <- ifelse(runif(1) <= alpha, theta.prop, theta.curr)
}
mean(diff(theta.b) != 0)
plot(theta.b,type = "l")
acf(theta.b)
theta.burn.b <- theta.b[-(1:10000)]
acf(theta.burn.b)
mean(diff(theta.burn.b)!=0)
plot(density(theta.burn.b), main = "Posterior Distribution",
xlab = expression(theta),
ylab = "Probability")
acf(theta.burn.b)
plot(theta.b,type = "l")
plot(density(theta.burn.b), main = "Posterior Distribution",
xlab = expression(theta),
ylab = "Probability")
median(theta.burn.b)
sd(theta.burn.b)
50 + 89
222 - 89 + 60
post.pred <- rbeta(1000, 139, 193)
pbeta(20, 139, 193)
pbeta(10, 139, 193)
dbeta(1, 139, 193)
dbeta(0, 139, 193)
dbeta(1, 139, 193)
dbeta(12, 139, 193)
tt <- seq(0,200)
plot(tt, dbeta(tt, 139, 193), type = "h")
monte <- rbeta(1000, 139, 193)
monte
pbeta(20, 139, 193)
?beta
means(<=20)
means(monte <= 20)
mean(monte <= 20)
mean(monte <= .09)
post.thetas <- rbeta(10000, 139, 193)
post.thetas <- rbeta(10000, 139, 193)
postpreds <- rbinom(length(post.thetas), 19, post.thetas)
postprobs <- rep(NA,20)
for (i in 1:length(postprobs)){
postprobs[i] <- mean(postpreds==(i-1))
}
pbinom(20, postpred, postprobs)
pbinom(20, postpreds, postprobs)
pbinom(20, postpreds, postprobs)
pbinom(20, mean(postpreds), mean(postprobs))
plot(0:45, postprobs)
plot(0:44, postprobs)
length(postprobs)
post.thetas <- rbeta(10000, 139, 193)
postpreds <- rbinom(length(post.thetas), 45, post.thetas)
postprobs <- rep(NA, 45)
for (i in 1:length(postprobs)){
postprobs[i] <- mean(postpreds==(i-1))
}
length(postprobs)
plot(0:45, postprobs)
plot(0:45, postprobs)
plot(0:44, postprobs)
plot(0:44, postprobs, type = "h")
postprobs[20]
postprobs[0]
postprobs[10]
postprobs[12]
postprobs[19]
blood.healthy <- c( 122.3, 131.4, 122.8, 113.6, 118.7, 115.4, 111.1, 122.0)
blood.diseased <- c(125.2, 120.4, 147.9, 114.0, 148.1, 134.4, 135.8, 119.6)
mu.blood.healthy <- rep(NA, 10001)
astar.blood.healthy <- 5 + length(blood.healthy)/2
astar.blood.healthy
bstar.blood.healthy <- 320 + 0.5 * sum((blood.healthy - mean(blood.healthy)) ^ 2)
bstar.blood.healthy
astar.blood.disease <- 5 + length(blood.diseased)/2
bstar.blood.healthy <- 320 + 0.5 * sum((blood.healthy - 119) ^ 2)
bstar.blood.healthy
astar.blood.disease <- 3 + length(blood.diseased)/2
astar.blood.disease
bstar.blood.disease <- 160 + 0.5 * sum((blood.diseased - 124)^2)
bstar.blood.disease
sig.healthy.m <- rinvgamma(10000, astar.blood.healthy, bstar.blood.healthy)
sig.diseased.m <- rinvgamma(10000, astar.blood.disease, bstar.blood.disease)
ratio <- sig.healthy.m/sig.diseased.m
quantile(ratio, c(.005,.995))
10/3
post.thetas <- rbeta(10000, 139, 193)
postpreds <- rbinom(length(post.thetas), 45, post.thetas)
postprobs <- rep(NA, 45)
for (i in 1:length(postprobs)){
postprobs[i] <- mean(postpreds==(i-1))
}
length(postprobs)
plot(0:44, postprobs, type = "h")
postprobs[20]
postprobs[19]
mu.a <- rep(NA, 10001)
sigma2.a <- rep(NA, 10001)
mu.a[1] <- mean(blood.healthy)
sigma2.a[1] <- var(blood.healthy)
for (j in 2:10001){
mu.b[j] <- update.mu(sigma2.b[j-1], blood.healthy, 120, 3.33^2)
sigma2.b[j] <- update.var(mu.b[j], blood.healthy, 5, 320)
}
mu.d <- rep(NA, 10001)
sigma2.d <- rep(NA, 10001)
mu.d[1] <- mean(blood.healthy)
sigma2.d[1] <- var(blood.healthy)
for (j in 2:10001){
mu.d[j] <- update.mu(sigma2.d[j-1], blood.healthy, 120, 3.33^2)
sigma2.d[j] <- update.var(mu.d[j], blood.healthy, 5, 320)
}
tt <- seq(50, 300, length = 1001)
plot(density(mu.d[-(1:100)]),
main = "Posterior",
xlab = expression(mu),
ylab = "Probability")
mu.d <- rep(NA, 10001)
sigma2.d <- rep(NA, 10001)
mu.d[1] <- mean(blood.healthy)
sigma2.d[1] <- var(blood.healthy)
for (j in 2:10001){
mu.d[j] <- update.mu(sigma2.d[j-1], blood.healthy, 120, 3.33^2)
sigma2.d[j] <- update.var(mu.d[j], blood.healthy, 5, 320)
}
plot(density(mu.d[-(1:100)]),
main = "Posterior",
xlab = expression(mu),
ylab = "Probability")
mu.healthy <- rnorm(1000, mu.d, sigma2.d)
mu.e <- rep(NA, 10001)
sigma2.e <- rep(NA, 10001)
mu.e[1] <- mean(blood.diseased)
sigma2.e[1] <- var(blood.diseased)
for (j in 2:10001){
mu.e[j] <- update.mu(sigma2.e[j-1], blood.diseased, 120, 3.33^2)
sigma2.d[j] <- update.var(mu.d[j], blood.healthy, 3, 160)
}
mu.healthy.blood <- rnorm(1000, mu.d, sigma2.d)
mu.diseased.blood <- rnorm(1000, mu.e, sigma2.e)
mu.healthy.blood <- rinvgamma(1000, mu.d, sigma2.d)
mu.diseased.blood <- rinvgamma(1000, mu.e, sigma2.e)
mu.e <- rep(NA, 10001)
sigma2.e <- rep(NA, 10001)
mu.e[1] <- mean(blood.diseased)
sigma2.e[1] <- var(blood.diseased)
for (j in 2:10001){
mu.e[j] <- update.mu(sigma2.e[j-1], blood.diseased, 120, 3.33^2)
sigma2.d[j] <- update.var(mu.d[j], blood.healthy, 3, 160)
}
mu.healthy.blood <- rinvgamma(1000, mu.d, sigma2.d)
mu.diseased.blood <- rinvgamma(1000, mu.e, sigma2.e)
mu.e <- rep(NA, 10001)
sigma2.e <- rep(NA, 10001)
mu.e[1] <- mean(blood.diseased)
sigma2.e[1] <- var(blood.diseased)
for (j in 2:10001){
mu.e[j] <- update.mu(sigma2.e[j-1], blood.diseased, 120, 3.33^2)
sigma2.e[j] <- update.var(mu.e[j], blood.diseased, 3, 160)
}
mu.healthy.blood <- rinvgamma(1000, mu.d, sigma2.d)
mu.diseased.blood <- rinvgamma(1000, mu.e, sigma2.e)
diffs <- (mu.healthy.blood - mu.diseased.blood)
mu.healthy.blood <- rnorm(1000, mu.d, sigma2.d)
mu.diseased.blood <- rnorm(1000, mu.e, sigma2.e)
diffs <- (mu.healthy.blood - mu.diseased.blood)
plot(density(diffs),
main = "Posterior of differences")
post.pred.y1 <- rnorm(1000, mu.d, sigma2.d)
post.pred.y1 <- rnorm(1000 - 100, mu.d[-(1:100)], sigma2.d[-(1:100)])
post.pred.y2 <- rnorm(1000 - 100, mu.e[-(1:100)], sigma2.d[-(1:100)])
mu.healthy.blood <- rnorm(1000 - 100, mu.d[-(1:100)], sigma2.d[-(1:100)])
mu.diseased.blood <- rnorm(1000 - 100, mu.e[-(1:100)], sigma2.e[-(1:100)])
diffs <- (mu.healthy.blood - mu.diseased.blood)
plot(density(diffs),
main = "Posterior of differences")
post.pred.y1 <- rnorm(1000 - 100, mu.d[-(1:100)], sigma2.d[-(1:100)])
plot(density(post.pred.y1))
post.pred.diffs <- post.pred.y1 - post.pred.y2
plot(density(post.pred.diffs))
plot(density(post.pred.diffs))
post.pred.y2 <- rnorm(1000 - 100, mu.e[-(1:100)], sigma2.d[-(1:100)])
post.pred.diffs <- post.pred.y1 - post.pred.y2
plot(density(post.pred.diffs))
x <- c(5.85, 3.34, 4.72, 3.55, 5.75, 1.67, 6.84, 4.82, 4.95) #annual rainfall
y <- c(103.8, 74.8, 93.7, 80.4, 79.5, 35.4, 129.1, 89.1, 105.7)
cor(x,y)
x <- c(5.85, 3.34, 4.72, 3.55, 5.75, 1.67, 6.84, 4.82, 4.95)
#annual rainfall
y <- c(103.8, 74.8, 93.7, 80.4, 79.5, 35.4, 129.1, 89.1, 105.7)
#Corn Yield (bushels/acre)
#1
cor(x,y)
#with r = 0.8939339, this shows us that there is a strong positive correlation between annual rainfall and corn yield.
data("mtcars")
head(mtcars)
View(mtcars)
fit.model <- glm(mpg ~ hp + as.factor(am), data = mtcars)
summary(fit.model)
ci.lower <- summary(fit.model)$coefficients[,1] + (-1.96) *
summary(fit.model)$coefficients[,2]
ci <- bind(ci.lower, ci.upper)
ci <- cbind(ci.lower, ci.upper)
ci.lower <- summary(fit.model)$coefficients[,1] + (-1.96) *
summary(fit.model)$coefficients[,2]
ci.upper <- summary(fit.model)$coefficients[,1] + (1.96) *
summary(fit.model)$coefficients[,2]
ci <- cbind(ci.lower, ci.upper)
ci
pnorm(54, 53, 1)
pnorm(54, 53, 1/4)
pnorm(54, 53, 1/16)
pnorm(54, 53, 1/4) - pnorm(53, 53,1/4)
15/5
pnorm(54, 53, 1/sqrt(4)) - pnorm(53, 53,1/sqrt(4))
pnorm(54, 53, 1/sqrt(4))
pnorm(54, 53, 1/sqrt(16))
pnorm(54, 53, 1/sqrt(15))
pnorm(54, 53, 1/sqrt(14))
pnorm(54, 53, 1/sqrt(10))
pnorm(54, 53, 1/sqrt(4))
pnorm(54, 53, 1/sqrt(10))
pnorm(54, 53, 1/sqrt(9))
pnorm(54, 53, 1/sqrt(10))
x <- c(82, 96, 99, 102, 103, 103, 106, 108, 109, 110, 110, 111, 113, 113, 118, 118, 119, 121, 122, 122, 127,
107, 108, 108, 108, 113, 113, 115, 115, 132, 136, 140, 146)
mean(x)
median(x)
sd(x)
?cv
?CV
install.packages(Raster)
install.packages(raster)
install.packages("raster")
CV(x)
library(raster)
CV(x)
cv(x)
x <- c(117, 103, 121, 149, 125, 131, 112, 136, 120, 107, 132, 113, 108, 113, 117, 132, 136, 114)
y <- c(114, 102, 114, 109, 113, 102, 131, 114, 124, 127, 117, 127, 103, 120, 90)
mean(x)
mean(y)
mean(x) - mean(y)
sd(x)
sd(y)
var(x)
var(y)
var(x - y)
cov(x,y)
sqrt(var(x) - var(y))
sqrt(var(x) + var(y))
sd(x)/sd(y)
var(x) + var(y)
(var(x)/length(x)) + (var(y)/length(y))
sqrt(var(x)/length(x)) + (var(y)/length(y))
(sd(x)/length(x))/(sd(y)/length(n))
(sd(x)/length(x))/(sd(y)/length(y))
x <- c(82, 96, 99, 102, 103, 103, 106, 108, 109, 110, 110, 111, 113, 113, 118, 118, 119, 121, 122, 122, 127,
+ 107, 108, 108, 108, 113, 113, 115, 115, 132, 136, 140, 146)
sd(x)/sqrt(length(x))
1 - pnorm(100, 113.7273, 12.74)
1 - pnorm(100, mean(x), sd(x))
x <- c(82, 96, 99, 102, 103, 103, 106, 108, 109, 110, 110, 111, 113, 113, 118, 118, 119, 121, 122, 122, 127,
107, 108, 108, 108, 113, 113, 115, 115, 132, 136, 140, 146)
sd(x)/sqrt(length(x))
sum(x > 100)
sum(x > 100)/length(x)
x <- c(117, 103, 121, 149, 125, 131, 112, 136, 120, 107, 132, 113, 108, 113, 117, 132, 136, 114)
y <- c(114, 102, 114, 109, 113, 102, 131, 114, 124, 127, 117, 127, 103, 120, 90)
sqrt(var(x)/length(x)) + (var(y)/length(y))
var(x)
var(y)
length(x)
length(y)
sd(x)
sd(x)/sd(y)
log(1)
?mle
x <- (-0.88, -.24, -.81, -.25, .63, -1.67, .02, -.57, .92, -.14)
x <- c(-0.88, -.24, -.81, -.25, .63, -1.67, .02, -.57, .92, -.14)
var(x)
var(x)/10
sd(x)sqrt(10)
sd(x)/sqrt(10)
logLik(x)
?test
??test
?t.test
t.test(x, alternative = "greater", mu = 240)
y <- c(116, 500, 332, 246, 227, 195, 199, 286, 242)
t.test(y, alternative = "greater", mu = 240)
?z.test
?p.test
?ci
?conf
?confint
?conf
?confidence
t.test(y, alternative = "greater", mu = 240)
?t.test(y, alternative = "greater", mu = 240)
?t.test(y, alternative = "two.sided", mu = 240)
t.test(y, alternative = "two.sided", mu = 240)
model <- t.test(y, alternative = "two.sided", mu = 240)
confint(model)
260.3333 + 108.2532/sqrt(9)
260.3333 - 108.2532/sqrt(9)
model <- t.test(y, alternative = "greater", mu = 240)
t.test(y, alternative = "greater", mu = 240)
260.3333 - 0.56349 * 108.2532/sqrt(9)
260.3333 + 0.56349 * 108.2532/sqrt(9)
121.1667 - 116.3125
a <- c(121,118,118,113,132,119,122,124,122,114,120,112,124,123,124,127,129)
b <- c(129,119,121,93,109,113,126,105,107,136,117,115,107,120,127,117,)
b <- c(129,119,121,93,109,113,126,105,107,136,117,115,107,120,127,117)
c <- mean(a) - mean(b)
mean_se(c)
install.packages("ggplot2")
library(ggplot2)
mean_se(c)
(1/2) - (2/3)
data <- read.csv("POC.csv", header = TRUE)
months <- cbind(data$November, data$February, data$May)
plot(aes(data1$id))
plot(data1$id, data1$November, type = 'h', xlab = 'ID', ylab = 'November',
col = 'red', )
ggplot(data = data, aes(x = data$id, y = data$November))
+ geom_histogram(stat = 'bin', position = 'identity')
+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
+ coord_cartesian(ylim = c(-1:20))
ggplot(data = data, aes(x = data$id, y = data$November)) +
geom_histogram(stat = 'identity') +
coord_cartesian(xlim = c(-1, 20)) +
coord_flip()
cluster <- Mclust(data)
install.packages('Mclust')
install.packages('mclust')
library(mclust)
cluster <- Mclust(data)
cluster <- mclust(data)
cluster <- Mclust(data)
?mclust
??mclust
install.packages('mclust')
?mclust
install.packages('mclust')
install.packages('mclust')
?mclust
??mclust
?Mclust
library(mclust)
clust <- Mclust(data)
clust
plot(clust)
clust
summary(clust)
cluster <- Mclust(data[,-1])
data[,-1]
class <- data$class
?mclust
setwd("~/Desktop/WGU")
library(plyr)
library(corrplot)
library(ggplot2)
library(gridExtra)
library(ggthemes)
library(caret)
library(MASS)
library(randomForest)
library(party)
library(mclust)
data <- read.csv('WA_Fn-UseC_-Telco-Customer-Churn.csv')
######################################    DATA CLEANING   #######################################
sapply(data, function(x) sum(is.na(x))) #check for missing values.
cols_recode1 <- c(10:15)
#Change 'No internet service' to 'No'
for(i in 1:ncol(data[,cols_recode1])) {
data[,cols_recode1][,i] <- as.factor(mapvalues(data[,cols_recode1][,i], from =c("No internet service"),to=c("No")))
}
#Change 'No phone service' to 'No'
data$MultipleLines <- as.factor(mapvalues(data$MultipleLines, from=c("No phone service"), to=c("No")))
#Group tenure into 5 groups by month
min(data$tenure)
max(data$tenure)
#Change tenure to a factor variable
data$tenureGroups <- cut(data$tenure,
breaks=c(0, 12, 24, 48, 60, Inf),
include.lowest=TRUE,
labels=c("0-12","12-24","24-48","48-60", ">60"))
data$tenureGroups <- as.factor(data$tenureGroups)
#Change 0's and 1's to 'No' and 'Yes'
data$SeniorCitizen <- as.factor(mapvalues(data$SeniorCitizen,
from=c("0","1"),
to=c("No", "Yes")))
#Remove columns that aren't going to be used for the analysis
data$customerID <- NULL
data$tenure <- NULL
plot(mclust(data$Churn))
plot(Mclust(data$Churn))
plot(Mclust(data[,-1]))
Mclust(data[,-1])
install.packages("FactoMineR")
library(FactoMineR)
install.packages("FactoMineR")
available.packages()
x <- available.packages()
View(x)
library(FactoMineR)
install.packages("FactoMineR")
